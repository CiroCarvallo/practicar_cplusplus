/*template <class Contenedor>
typename Contenedor::value_type minimo (const Contenedor & c){
	//typename Contenedor::const_iterator min=c.begin(); // que implica que c.begin() sea const_iterator
	typename Contenedor::value_type min=*(c.begin());
	for (typename Contenedor::const_iterator it=c.begin();it!=c.end();it++){
		//if (*it < *min){
		if (*it < min){
			min=*it
			//++min;
		}
	}
	return min;
24 para que typename
25 que implica que c.begin() sea const_iterator
40 no hya una mejor forma que usar i?
49 en que gano pasando los iteradores si en el primer caso no estoy pasando el contenedor sino que paso una referencia (osea no copio todo el contenedor)

porque algunas funciones toman una referencia al elem y no el elem? para no copiarlo?

porque la definicion de insert tiene const al final


Contenedor c();
c.begin() da error? no puedo pedir begin si no tiene elementos?

con contenedor uno(); el codigo falla
